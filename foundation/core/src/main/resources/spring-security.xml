<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
    xmlns:context="http://www.springframework.org/schema/context"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
		http://www.springframework.org/schema/context  
		http://www.springframework.org/schema/context/spring-context-4.1.xsd  
		http://www.springframework.org/schema/security  
		http://www.springframework.org/schema/security/spring-security-4.0.xsd">  
	<context:component-scan base-package="com.fenghuangzhujia.yunyichu.service,com.fenghuangzhujia.yunyichu.security,com.fenghuangzhujia.yunyichu.cache"/>
	
	<!-- 一套可以启动的配置  -->
	<http>
		<csrf disabled="true"/>
		<custom-filter after="SECURITY_CONTEXT_FILTER" ref="tokenAuthFilter" />
		<!-- 所有因没有登录而报错的接口将重定向到/unauth，返回错误消息 -->
		<form-login login-page="/admin/login" login-processing-url="/admin/login"/>
		<access-denied-handler error-page="/accessDenied"/>
		<intercept-url pattern="/admin/login" access="permitAll"/>
		<intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/>
		<!-- 
		<intercept-url pattern="/admin" access="hasAnyRole('${authority.designer}','${authority.admin}','${authority.enter}')"/>
		<intercept-url pattern="/admin/authentication" access="hasRole('${authority.admin}')"/>
		<intercept-url pattern="/admin/user/**" access="hasRole('${authority.admin}')"/>
		<intercept-url pattern="/admin/role/**" access="hasRole('${authority.admin}')"/>
		<intercept-url pattern="/admin/enter" access="hasRole('${authority.enter}')"/>
		<intercept-url pattern="/admin/designer/**" access="hasRole('${authority.enter}')"/>
		<intercept-url pattern="/admin/organization/**" access="hasRole('${authority.enter}')"/>
		 -->
		<!-- 
		<intercept-url pattern="/login" access="permitAll"/>
		<intercept-url pattern="/user/**" access="authenticated"/>
		 -->
	</http>
	 
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="authenticateService">
			<password-encoder ref="bcryptEncoder"/>
		</authentication-provider>
	</authentication-manager>
	
	<beans:bean name="bcryptEncoder"
	class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
</beans:beans>